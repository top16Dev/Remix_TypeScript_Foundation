/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExternalProxyCall,
  ExternalProxyCallInterface,
} from "../ExternalProxyCall";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "externalContract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
    ],
    name: "proxyCallAndReturnAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "result",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610410806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063a1453b0e14610030575b600080fd5b61004361003e3660046102bd565b61006c565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6000806100c684848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505073ffffffffffffffffffffffffffffffffffffffff8916929150506100d3565b6020015195945050505050565b606061011583836040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564000081525061011c565b9392505050565b606061012b8484600085610133565b949350505050565b6060824710156101b05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b843b6101fe5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101a7565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610227919061038b565b60006040518083038185875af1925050503d8060008114610264576040519150601f19603f3d011682016040523d82523d6000602084013e610269565b606091505b5091509150610279828286610284565b979650505050505050565b60608315610293575081610115565b8251156102a35782518084602001fd5b8160405162461bcd60e51b81526004016101a791906103a7565b6000806000604084860312156102d257600080fd5b833573ffffffffffffffffffffffffffffffffffffffff811681146102f657600080fd5b9250602084013567ffffffffffffffff8082111561031357600080fd5b818601915086601f83011261032757600080fd5b81358181111561033657600080fd5b87602082850101111561034857600080fd5b6020830194508093505050509250925092565b60005b8381101561037657818101518382015260200161035e565b83811115610385576000848401525b50505050565b6000825161039d81846020870161035b565b9190910192915050565b60208152600082518060208401526103c681604085016020870161035b565b601f01601f1916919091016040019291505056fea26469706673582212205460e5e7d0ed7bcba3c9af7688167c574877f15fcb22fe27bc2041551dea357464736f6c634300080a0033";

type ExternalProxyCallConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExternalProxyCallConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExternalProxyCall__factory extends ContractFactory {
  constructor(...args: ExternalProxyCallConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExternalProxyCall> {
    return super.deploy(overrides || {}) as Promise<ExternalProxyCall>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ExternalProxyCall {
    return super.attach(address) as ExternalProxyCall;
  }
  connect(signer: Signer): ExternalProxyCall__factory {
    return super.connect(signer) as ExternalProxyCall__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExternalProxyCallInterface {
    return new utils.Interface(_abi) as ExternalProxyCallInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExternalProxyCall {
    return new Contract(address, _abi, signerOrProvider) as ExternalProxyCall;
  }
}
